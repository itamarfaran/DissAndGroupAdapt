colnames(averagecummeans) <- c("cond", gsub("V", "", colnames(byTime)[-(1:2)]))
averagecummeans <- gather(averagecummeans, key = round, value = cummean, -cond)
averagecummeans$round <- as.numeric(averagecummeans$round)
averagecummeans$group_num <- 0
averagecummeans$ismean <- TRUE
averagecummeans <- arrange(averagecummeans, cond, round)
byTime <- cbind(byTime[,1:2], cummeans)
colnames(byTime)[-(1:2)] <- gsub("V", "", colnames(byTime)[-(1:2)])
byTime <- gather(byTime, key = round, value = cummean, -cond, -group_num)
byTime$round <- as.numeric(byTime$round)
byTime <- arrange(byTime, cond, group_num, round)
byTime$ismean <- FALSE
averagecummeans <- select(averagecummeans, colnames(byTime))
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) + geom_vline(xintercept = 60.5, size = 3) +
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
source("firstAnal.R")
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
cummeans1 <- byTime[,3:62] %>% apply(1, cummean) %>% t
cummeans2 <- byTime[,63:102] %>% apply(1, cummean) %>% t
cummeans <- cbind(cummeans1, cummeans2)
averagecummeans <- cbind(unique(byTime[,cond]),
sapply(1:3, function(i) cummeans[byTime[,cond] == i,] %>%
colMeans(na.rm = T)) %>% t) %>% as.data.frame()
colnames(averagecummeans) <- c("cond", gsub("V", "", colnames(byTime)[-(1:2)]))
averagecummeans <- gather(averagecummeans, key = round, value = cummean, -cond)
averagecummeans$round <- as.numeric(averagecummeans$round)
averagecummeans$group_num <- 0
averagecummeans$ismean <- TRUE
averagecummeans <- arrange(averagecummeans, cond, round)
byTime <- cbind(byTime[,1:2], cummeans)
colnames(byTime)[-(1:2)] <- gsub("V", "", colnames(byTime)[-(1:2)])
byTime <- gather(byTime, key = round, value = cummean, -cond, -group_num)
byTime$round <- as.numeric(byTime$round)
byTime <- arrange(byTime, cond, group_num, round)
byTime$ismean <- FALSE
averagecummeans <- select(averagecummeans, colnames(byTime))
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5)
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5, col = "purple")
source("firstAnal.R")
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
cummeans <- byTime[,-(1:2)] %>% apply(1, cummean) %>% t
averagecummeans <- cbind(unique(byTime[,cond]),
sapply(1:3, function(i) cummeans[byTime[,cond] == i,] %>%
colMeans(na.rm = T)) %>% t) %>% as.data.frame()
colnames(averagecummeans) <- c("cond", gsub("V", "", colnames(byTime)[-(1:2)]))
averagecummeans <- gather(averagecummeans, key = round, value = cummean, -cond)
averagecummeans$round <- as.numeric(averagecummeans$round)
averagecummeans$group_num <- 0
averagecummeans$ismean <- TRUE
averagecummeans <- arrange(averagecummeans, cond, round)
byTime <- cbind(byTime[,1:2], cummeans)
colnames(byTime)[-(1:2)] <- gsub("V", "", colnames(byTime)[-(1:2)])
byTime <- gather(byTime, key = round, value = cummean, -cond, -group_num)
byTime$round <- as.numeric(byTime$round)
byTime <- arrange(byTime, cond, group_num, round)
byTime$ismean <- FALSE
averagecummeans <- select(averagecummeans, colnames(byTime))
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5, col = "purple")
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5, col = "purple") +
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
source("firstAnal.R")
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
cummeans1 <- byTime[,3:62] %>% apply(1, cummean) %>% t
cummeans2 <- byTime[,63:102] %>% apply(1, cummean) %>% t
cummeans <- cbind(cummeans1, cummeans2)
averagecummeans <- cbind(unique(byTime[,cond]),
sapply(1:3, function(i) cummeans[byTime[,cond] == i,] %>%
colMeans(na.rm = T)) %>% t) %>% as.data.frame()
colnames(averagecummeans) <- c("cond", gsub("V", "", colnames(byTime)[-(1:2)]))
averagecummeans <- gather(averagecummeans, key = round, value = cummean, -cond)
averagecummeans$round <- as.numeric(averagecummeans$round)
averagecummeans$group_num <- 0
averagecummeans$ismean <- TRUE
averagecummeans <- arrange(averagecummeans, cond, round)
byTime <- cbind(byTime[,1:2], cummeans)
colnames(byTime)[-(1:2)] <- gsub("V", "", colnames(byTime)[-(1:2)])
byTime <- gather(byTime, key = round, value = cummean, -cond, -group_num)
byTime$round <- as.numeric(byTime$round)
byTime <- arrange(byTime, cond, group_num, round)
byTime$ismean <- FALSE
averagecummeans <- select(averagecummeans, colnames(byTime))
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5, col = "purple") +
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
byTime
ipak(c("readr", "tidyverse", "data.table", "dtplyr", "pracma"))
source("firstAnal.R")
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
cummeans1 <- byTime[,3:62] %>% apply(1, movavg, n = 5) %>% t
cummeans2 <- byTime[,63:102] %>% apply(1, movavg, n = 5) %>% t
cummeans <- cbind(cummeans1, cummeans2)
averagecummeans <- cbind(unique(byTime[,cond]),
sapply(1:3, function(i) cummeans[byTime[,cond] == i,] %>%
colMeans(na.rm = T)) %>% t) %>% as.data.frame()
colnames(averagecummeans) <- c("cond", gsub("V", "", colnames(byTime)[-(1:2)]))
averagecummeans <- gather(averagecummeans, key = round, value = cummean, -cond)
averagecummeans$round <- as.numeric(averagecummeans$round)
averagecummeans$group_num <- 0
averagecummeans$ismean <- TRUE
averagecummeans <- arrange(averagecummeans, cond, round)
byTime <- cbind(byTime[,1:2], cummeans)
colnames(byTime)[-(1:2)] <- gsub("V", "", colnames(byTime)[-(1:2)])
byTime <- gather(byTime, key = round, value = cummean, -cond, -group_num)
byTime$round <- as.numeric(byTime$round)
byTime <- arrange(byTime, cond, group_num, round)
byTime$ismean <- FALSE
averagecummeans <- select(averagecummeans, colnames(byTime))
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5, col = "purple") +
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
byTime[,3:62]
byTime[,3:62]
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
byTime
byTime[,3:62]
byTime[,3:62] %>% apply(1, movavg, n = 5) %>% t
byTime[,3:62]
source("firstAnal.R")
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
cummeans1 <- 1*byTime[,3:62] %>% apply(1, movavg, n = 5) %>% t
1*byTime[,3:62]
1*byTime[,63:102]
cummeans1 <- 1*byTime[,3:62] %>% apply(1, movavg, n = 5) %>% t
cummeans1 <- (1*byTime[,3:62]) %>% apply(1, movavg, n = 5) %>% t
warnings()
cummeans1 <- (1*byTime[,3:62]) %>% apply(1, movavg) %>% t
source("firstAnal.R")
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
cummeans1 <- (1*byTime[,3:62]) %>% apply(1, movavg, n = 5, type = "s") %>% t
cummeans2 <- 1*byTime[,63:102] %>% apply(1, movavg, n = 5, type = "s") %>% t
cummeans <- cbind(cummeans1, cummeans2)
averagecummeans <- cbind(unique(byTime[,cond]),
sapply(1:3, function(i) cummeans[byTime[,cond] == i,] %>%
colMeans(na.rm = T)) %>% t) %>% as.data.frame()
colnames(averagecummeans) <- c("cond", gsub("V", "", colnames(byTime)[-(1:2)]))
averagecummeans <- gather(averagecummeans, key = round, value = cummean, -cond)
averagecummeans$round <- as.numeric(averagecummeans$round)
averagecummeans$group_num <- 0
averagecummeans$ismean <- TRUE
averagecummeans <- arrange(averagecummeans, cond, round)
byTime <- cbind(byTime[,1:2], cummeans)
colnames(byTime)[-(1:2)] <- gsub("V", "", colnames(byTime)[-(1:2)])
byTime <- gather(byTime, key = round, value = cummean, -cond, -group_num)
byTime$round <- as.numeric(byTime$round)
byTime <- arrange(byTime, cond, group_num, round)
byTime$ismean <- FALSE
averagecummeans <- select(averagecummeans, colnames(byTime))
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5, col = "purple") +
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
source("firstAnal.R")
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
cummeans1 <- (1*byTime[,3:62]) %>% apply(1, movavg, n = 10, type = "s") %>% t
cummeans2 <- 1*byTime[,63:102] %>% apply(1, movavg, n = 10, type = "s") %>% t
cummeans <- cbind(cummeans1, cummeans2)
averagecummeans <- cbind(unique(byTime[,cond]),
sapply(1:3, function(i) cummeans[byTime[,cond] == i,] %>%
colMeans(na.rm = T)) %>% t) %>% as.data.frame()
colnames(averagecummeans) <- c("cond", gsub("V", "", colnames(byTime)[-(1:2)]))
averagecummeans <- gather(averagecummeans, key = round, value = cummean, -cond)
averagecummeans$round <- as.numeric(averagecummeans$round)
averagecummeans$group_num <- 0
averagecummeans$ismean <- TRUE
averagecummeans <- arrange(averagecummeans, cond, round)
byTime <- cbind(byTime[,1:2], cummeans)
colnames(byTime)[-(1:2)] <- gsub("V", "", colnames(byTime)[-(1:2)])
byTime <- gather(byTime, key = round, value = cummean, -cond, -group_num)
byTime$round <- as.numeric(byTime$round)
byTime <- arrange(byTime, cond, group_num, round)
byTime$ismean <- FALSE
averagecummeans <- select(averagecummeans, colnames(byTime))
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5, col = "purple") +
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
source("firstAnal.R")
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
cummeans1 <- byTime[,3:62] %>% apply(1, cummean) %>% t
cummeans2 <- byTime[,63:102] %>% apply(1, cummean) %>% t
cummeans <- cbind(cummeans1, cummeans2)
averagecummeans <- cbind(unique(byTime[,cond]),
sapply(1:3, function(i) cummeans[byTime[,cond] == i,] %>%
colMeans(na.rm = T)) %>% t) %>% as.data.frame()
colnames(averagecummeans) <- c("cond", gsub("V", "", colnames(byTime)[-(1:2)]))
averagecummeans <- gather(averagecummeans, key = round, value = cummean, -cond)
averagecummeans$round <- as.numeric(averagecummeans$round)
averagecummeans$group_num <- 0
averagecummeans$ismean <- TRUE
averagecummeans <- arrange(averagecummeans, cond, round)
byTime <- cbind(byTime[,1:2], cummeans)
colnames(byTime)[-(1:2)] <- gsub("V", "", colnames(byTime)[-(1:2)])
byTime <- gather(byTime, key = round, value = cummean, -cond, -group_num)
byTime$round <- as.numeric(byTime$round)
byTime <- arrange(byTime, cond, group_num, round)
byTime$ismean <- FALSE
averagecummeans <- select(averagecummeans, colnames(byTime))
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5, col = "purple") +
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
testData
testData[,mean(iscorrInd), by = cond]
testData[,mean(iscorrInd), by = cond]
testData[,mean(iscorrGr), by = cond]
testData[,mean(iscorrInd), by = .(cond, round <= 60)]
testData[,.(mean(iscorrInd), iscorrGr), by = .(cond, round <= 60)]
testData[,.(mean(iscorrInd), mean(iscorrGr)), by = .(cond, round <= 60)]
testData[,mean(iscorrInd), by = .(cond, round <= 60)]
testData[,mean(iscorrGr), by = .(cond, round <= 60)]
testData[,mean(iscorrInd), keyby = .(cond, round <= 60)]
testData[,mean(iscorrInd), keyby = cond]
testData[,mean(iscorrGr), keyby = cond]
testData[,mean(iscorrInd), keyby = .(cond, round <= 60)]
testData[,mean(iscorrGr), keyby = .(cond, round <= 60)]
testData[,mean(iscorrInd), keyby = .(cond, round > 60)]
testData[,mean(iscorrGr), keyby = .(cond, round > 60)]
testData[,mean(iscorrInd), keyby = .(cond, round > 60)]
testData[,mean(iscorrGr), keyby = .(cond, round > 60)]
testData[,mean(iscorrInd), keyby = cond]
testData[,mean(iscorrGr), keyby = cond]
testData[,mean(iscorrInd), keyby = .(cond, round > 60)]
testData[,mean(iscorrInd), keyby = .(cond, round > 60)]
testData[,mean(iscorrGr), keyby = .(cond, round > 60)]
testData[,mean(iscorrInd), keyby = .(cond, round > 60)]
testData[,mean(iscorrGr), keyby = cond]
testData[,mean(iscorrInd), keyby = cond]
testData[,mean(iscorrGr), keyby = .(cond, round > 60)]
testData[,mean(iscorrInd), keyby = .(cond, round > 60)]
str(testData)
testData[subnum == "1",iscorrGr]
testData[subnum == "1", iscorrGr] %>% acf
testData[subnum == "1", 1*iscorrGr] %>% acf
testData[subnum == "1", 1*iscorrGr] %>% pacf
testData[subnum == "7", 1*iscorrGr] %>% pacf
testData[subnum == "17", 1*iscorrGr] %>% pacf
testData[subnum == "17", 1*iscorrGr] %>% acf
testData[subnum == "20", 1*iscorrGr] %>% acf
testData[subnum == "40", 1*iscorrGr] %>% acf
testData[subnum == "40", 1*iscorrGr] %>% acf
testData[subnum == "40", 1*iscorrGr] %>% pacf
testData[subnum == "80", 1*iscorrGr] %>% pacf
testData[subnum == "80", 1*iscorrGr] %>% acf
testData[subnum == "80", 1*iscorrGr] %>% pacf
testData[subnum == "112", 1*iscorrGr] %>% pacf
testData[subnum == "112", 1*iscorrGr] %>% acf
testData[subnum == "112", 1*iscorrGr] %>% pacf
testData[,indPrevCorr := iscorrInd[2:ncol(testData)]]
testData[,indPrevCorr := iscorrInd[1:ncol(testData)]]
testData[,indPrevCorr := iscorrInd[1:nrow(testData)]]
testData[,indPrevCorr := c(0,iscorrInd[1:nrow(testData)])]
testData[,indPrevCorr := c(0, iscorrInd[1:(nrow(testData)-1)])]
testData
testData[,indPrevCorr := c(FALSE, iscorrInd[1:(nrow(testData)-1)])]
testData
testData[round == "1", indPrevCorr := NULL]
testData[round == "1", indPrevCorr := NA]
testData[,indPrevCorr := c(FALSE, iscorrInd[1:(nrow(testData)-1)])]
testData[round == "1", indPrevCorr := NA]
testData
testData[,indPrevCorr := c(FALSE, iscorrInd[1:(nrow(testData)-1)])]
testData[round == "1", indPrevCorr := NA]
testData[,grPrevCorr := c(FALSE, iscorrGr[1:(nrow(testData)-1)])]
testData[round == "1", grPrevCorr := NA]
testData
cor(testData[,.(grPrevCorr,iscorrGr)])
cor(testData[,.(grPrevCorr,iscorrGr)], use = "complete.obs")
testData[,indPrevCorr := c(FALSE, iscorrInd[1:(nrow(testData)-1)])]
testData[round == "1", indPrevCorr := iscorrInd]
testData[,grPrevCorr := c(FALSE, iscorrGr[1:(nrow(testData)-1)])]
testData[round == "1", grPrevCorr := iscorrInd]
cor(testData[,.(grPrevCorr,iscorrGr)])
cor(testData[,.(grPrevCorr,iscorrGr)])
cor(testData[,.(indPrevCorr,iscorrInd)])
cor(testData[,.(grPrevCorr,iscorrGr)])
cor(testData[,.(indPrevCorr,iscorrInd)])
testData[,cor(grPrevCorr,iscorrGr)]
testData
testData[,cor(grPrevCorr,iscorrGr), by = subnum]
testData[,cor(grPrevCorr,iscorrGr), by = subnum] %>% hist
testData[,cor(grPrevCorr,iscorrGr), by = subnum][,2] %>% hist
testData[,cor(grPrevCorr,iscorrGr), by = subnum][,2]
testData[,cor(grPrevCorr,iscorrGr), by = subnum][,2] %>% unlisy %>% hist
testData[,cor(grPrevCorr,iscorrGr), by = subnum][,2] %>% unlist %>% hist
testData[,cor(grPrevCorr,iscorrGr), by = subnum]
summary(testData[,cor(grPrevCorr,iscorrGr), by = subnum])
auto_cor <- function(x, lag) cor(x[1:(length(x) - lag)], x[lag:length(x)])
auto_cor(1:8)
auto_cor(1:8, 1)
auto_cor <- function(x, lag) cor(x[1:(length(x) - lag)], x[(1 + lag):length(x)])
auto_cor(1:8, 1)
auto_cor <- function(x, lag) cor(x[1:(length(x) - lag)], x[(1 + lag):length(x)])
testData[,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 1), by = subnum]
testData[,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 2), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 3), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 7), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 12), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 2), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 3), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 7), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 12), by = subnum][,2] %>% unlist %>% hist
summary(testData[,cor(grPrevCorr,iscorrGr), by = subnum])
source("baseFunctions.R")
ipak(c("readr", "tidyverse", "data.table", "dtplyr", "pracma"))
testData <- fread("Data/decision_making_experiment.csv")
str(testData)
testData[,subnum := createID(subnum)]
testData[,group_num := createID(group_num)]
testData[,cond := factor(cond)]
testData[,firstchoice := factor(firstchoice)]
testData[,kind := factor(kind)]
testData[,finaldecision := factor(finaldecision)]
testData[firstchoice != finaldecision, .N]
testData[round <= 60, iscorrInd := (individualcoice == 2)]
testData[round > 60, iscorrInd := individualcoice != 2]
testData[round <= 60, iscorrGr := (finaldec == 2)]
testData[round > 60, iscorrGr := finaldec != 2]
testData[,individualcoice := as.integer(individualcoice - 1)]
testData[,finaldec := as.integer(finaldec - 1)]
testData[,indPrevCorr := c(FALSE, iscorrInd[1:(nrow(testData)-1)])]
testData[round == "1", indPrevCorr := iscorrInd]
testData[,grPrevCorr := c(FALSE, iscorrGr[1:(nrow(testData)-1)])]
testData[round == "1", grPrevCorr := iscorrInd]
str(testData)
testData[subnum == "112", 1*iscorrGr] %>% pacf
testData[,mean(iscorrGr), keyby = cond]
testData[,mean(iscorrInd), keyby = cond]
testData[,mean(iscorrGr), keyby = .(cond, round > 60)]
testData[,mean(iscorrInd), keyby = .(cond, round > 60)]
cor(testData[,.(grPrevCorr,iscorrGr)])
cor(testData[,.(indPrevCorr,iscorrInd)])
testData[,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 2), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 3), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 7), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 12), by = subnum][,2] %>% unlist %>% hist
summary(testData[,cor(grPrevCorr,iscorrGr), by = subnum])
testData
testData
glm(iscorrInd ~ round*(round > 60))
glm(iscorrInd ~ round*(round > 60), testData)
glm(iscorrInd ~ round*(round > 60), testData, family = binomial(link = "logit"))
glm(iscorrInd ~ round + (round > 60), testData, family = binomial(link = "logit"))
testData
glm(iscorrInd ~ round + (round > 60) + cond, testData, family = binomial(link = "logit"))
glm(iscorrInd ~ cond*round + cond*(round > 60), testData, family = binomial(link = "logit"))
glm(iscorrInd ~ cond*round + cond*(round > 60), testData, family = binomial(link = "logit")) %>% summary()
glm(iscorrInd ~ 0 +cond*round + cond*(round > 60), testData, family = binomial(link = "logit")) %>% summary()
glm(iscorrInd ~ cond*round + cond*(round > 60), testData, family = binomial(link = "logit")) %>% summary()
ipak(c("readr", "tidyverse", "data.table", "dtplyr", "pracma", "lme4"))
glm(iscorrInd ~ cond*round + cond*(round > 60), testData, family = binomial(link = "logit")) %>% summary()
glm(iscorrInd ~ round*(round > 60), testData, family = binomial(link = "logit")) %>% summary()
glm(iscorrInd ~ round*(round > 60)*cond, testData, family = binomial(link = "logit")) %>% summary()
glm(iscorrInd ~ (round + (round > 60))*cond, testData, family = binomial(link = "logit")) %>% summary()
glmer(iscorrInd ~ (round + (round > 60))*cond + (1|subnum), testData, family = binomial(link = "logit")) %>% summary()
glmer(iscorrInd ~ (round + (round > 60))*cond + (1|group_num), testData, family = binomial(link = "logit")) %>% summary()
source("baseFunctions.R")
ipak(c("readr", "tidyverse", "data.table", "dtplyr", "pracma", "lme4"))
testData <- fread("Data/decision_making_experiment.csv")
str(testData)
createID
source("baseFunctions.R")
str(testData)
testData <- fread("Data/decision_making_experiment.csv")
str(testData)
head(testData)
testData[,subnum := createID(subnum)]
testData[,group_num := createID(group_num)]
testData <- fread("Data/decision_making_experiment.csv")
str(testData)
testData[,subnum := createID(subnum)]
testData[,group_num := createID(group_num)]
testData[,cond := factor(cond)]
testData[,firstchoice := factor(firstchoice)]
testData[,kind := factor(kind)]
testData[,finaldecision := factor(finaldecision)]
testData[firstchoice != finaldecision, .N]
testData
testData[firstchoice != finaldecision, .N]
testData[firstchoice != finaldecision, .N]
testData[round <= 60, iscorrInd := (individualcoice == 2)]
testData[round > 60, iscorrInd := individualcoice != 2]
testData[round <= 60, iscorrGr := (finaldec == 2)]
testData[round > 60, iscorrGr := finaldec != 2]
testData[,individualcoice := as.integer(individualcoice - 1)]
testData[,finaldec := as.integer(finaldec - 1)]
source("baseFunctions.R")
ipak(c("readr", "tidyverse", "data.table", "dtplyr", "pracma", "lme4"))
testData <- fread("Data/decision_making_experiment.csv")
str(testData)
testData[,subnum := createID(subnum)]
testData[,group_num := createID(group_num)]
testData[,cond := factor(cond)]
testData[,firstchoice := factor(firstchoice)]
testData[,kind := factor(kind)]
testData[,finaldecision := factor(finaldecision)]
testData[firstchoice != finaldecision, .N]
testData[round <= 60, iscorrInd := (individualcoice == 2)]
testData[round > 60, iscorrInd := individualcoice != 2]
testData[round <= 60, iscorrGr := (finaldec == 2)]
testData[round > 60, iscorrGr := finaldec != 2]
testData[,individualcoice := as.integer(individualcoice - 1)]
testData[,finaldec := as.integer(finaldec - 1)]
testData[,indPrevCorr := c(FALSE, iscorrInd[1:(nrow(testData)-1)])]
testData[round == "1", indPrevCorr := iscorrInd]
testData[,grPrevCorr := c(FALSE, iscorrGr[1:(nrow(testData)-1)])]
testData[round == "1", grPrevCorr := iscorrInd]
str(testData)
testData[subnum == "112", 1*iscorrGr] %>% pacf
testData[subnum == "116", 1*iscorrGr] %>% pacf
testData[subnum == "117", 1*iscorrGr] %>% pacf
testData[subnum == "117", 1*iscorrGr] %>% acf
testData[subnum == "117", 1*iscorrGr] %>% pacf
testData[subnum == "98", 1*iscorrGr] %>% pacf
testData[subnum == "17", 1*iscorrGr] %>% pacf
testData[,mean(iscorrGr), keyby = cond]
testData[,mean(iscorrInd), keyby = cond]
testData[,mean(iscorrGr), keyby = .(cond, round > 60)]
testData[,mean(iscorrInd), keyby = .(cond, round > 60)]
cor(testData[,.(grPrevCorr,iscorrGr)])
cor(testData[,.(indPrevCorr,iscorrInd)])
cor(testData[,.(grPrevCorr,iscorrGr)])
cor(testData[,.(indPrevCorr,iscorrInd)])
testData[,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 2), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 3), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 7), by = subnum][,2] %>% unlist %>% hist
testData[,auto_cor(iscorrGr, 12), by = subnum][,2] %>% unlist %>% hist
summary(testData[,cor(grPrevCorr,iscorrGr), by = subnum])
glm(iscorrInd ~ (round + (round > 60))*cond, testData, family = binomial(link = "logit")) %>% summary()
glmer(iscorrInd ~ (round + (round > 60))*cond + (1|group_num), testData, family = binomial(link = "logit")) %>% summary()
source("firstAnal.R")
byTime <- testData[,.(round, group_num, cond, iscorrGr)] %>% unique() %>% spread(key = round, value = iscorrGr)
cummeans <- byTime[,-(1:2)] %>% apply(1, cummean) %>% t
averagecummeans <- cbind(unique(byTime[,cond]),
sapply(1:3, function(i) cummeans[byTime[,cond] == i,] %>%
colMeans(na.rm = T)) %>% t) %>% as.data.frame()
colnames(averagecummeans) <- c("cond", gsub("V", "", colnames(byTime)[-(1:2)]))
averagecummeans <- gather(averagecummeans, key = round, value = cummean, -cond)
averagecummeans$round <- as.numeric(averagecummeans$round)
averagecummeans$group_num <- 0
averagecummeans$ismean <- TRUE
averagecummeans <- arrange(averagecummeans, cond, round)
byTime <- cbind(byTime[,1:2], cummeans)
colnames(byTime)[-(1:2)] <- gsub("V", "", colnames(byTime)[-(1:2)])
byTime <- gather(byTime, key = round, value = cummean, -cond, -group_num)
byTime$round <- as.numeric(byTime$round)
byTime <- arrange(byTime, cond, group_num, round)
byTime$ismean <- FALSE
averagecummeans <- select(averagecummeans, colnames(byTime))
ggplot() + geom_line(data = byTime, mapping = aes(x = round, y = cummean, col = factor(cond), group = group_num)) +
geom_line(data = averagecummeans, mapping = aes(x = round, y = cummean, col = factor(cond)), size = 1) +
geom_vline(xintercept = 0) + geom_hline(yintercept = 0) +
geom_vline(xintercept = 60.5, size = 3) + geom_hline(yintercept = 0.5, col = "purple") +
labs(title = "Cumulative Average by Group", x = "Round", y = "Cumulative Mean", col = "Group Type")
source('C:/Users/itamarf/Google Drive (itamar.faran@gmail.com)/Documents/Study/05 Year 2018-2019/52841 Laboratory in Statistical Consulting/DissAndGroupAdapt/spageti2.R', echo=TRUE)
source('C:/Users/itamarf/Google Drive (itamar.faran@gmail.com)/Documents/Study/05 Year 2018-2019/52841 Laboratory in Statistical Consulting/DissAndGroupAdapt/firstAnal.R', echo=TRUE)
source('C:/Users/itamarf/Google Drive (itamar.faran@gmail.com)/Documents/Study/05 Year 2018-2019/52841 Laboratory in Statistical Consulting/DissAndGroupAdapt/spageti2.R', echo=TRUE)
testData[,mean(iscorrGr), keyby = cond]
testData[,mean(iscorrGr), keyby = .(cond, round > 60)]
testData[subnum == "17", 1*iscorrGr] %>% pacf
testData[,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[cond == 1,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[cond == 1,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[cond == 2,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[cond == 3,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[cond == 1,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[cond == 3,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[cond == 2,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
testData[cond == 1,auto_cor(iscorrGr, 1), by = subnum][,2] %>% unlist %>% hist
mod <- glmer(iscorrInd ~ (round + (round > 60))*cond + (1|group_num), testData, family = binomial(link = "logit")) %>% summary()
summary(mod)
mod <- glmer(iscorrInd ~ (round + (round > 60))*cond + (1|group_num), testData, family = binomial(link = "logit"))
summary(mod)
0.9*7 - 0.1*5
0.7*7 - 0.3*5
0.5*7 - 0.5*5
source("baseFunctions.R")
ipak(c("readr", "tidyverse", "data.table", "dtplyr", "pracma", "lme4"))
testData <- fread("Data/decision_making_experiment.csv")
str(testData)
source("baseFunctions.R")
ipak(c("readr", "tidyverse", "data.table", "dtplyr", "pracma", "lme4"))
testData <- fread("Data/decision_making_experiment.csv")
str(testData)
